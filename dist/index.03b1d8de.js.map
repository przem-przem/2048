{"mappings":"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","sources":["src/js/EndgameHandler.js","src/js/Cell.js","src/js/Grid.js","src/js/Tile.js","src/js/InputHandler.js","src/js/Settings.js","src/js/main2.js"],"sourcesContent":["import {endGameBoard, endGameTitle, endgameScore, hiddenClass} from \"./main2.js\";\r\nimport {SCORE} from \"./Cell.js\";\r\n\r\nexport const endGame = outcome => {\r\n\r\n  if(outcome) {\r\n    endGameTitle.innerHTML = \"You win :)\";\r\n  } else {\r\n    endGameTitle.innerHTML = \"You lose :(\";\r\n  }\r\n\r\n  endGameBoard.classList.remove(hiddenClass);\r\n  endgameScore.innerHTML = `Your score:  ${SCORE}`;\r\n\r\n}\r\n\r\nexport const endGameScoreUpdate = () => {\r\n    endgameScore.innerHTML = `Your score:  ${SCORE}`;\r\n}\r\n","import {endGame} from \"./EndgameHandler.js\";\r\nimport {title, baseNumber} from \"./main2.js\";\r\n\r\nexport let SCORE = 0;\r\nconst scoreElement = document.getElementById(\"score\");\r\n\r\nexport default class Cell {\r\n  #cellElement\r\n  #x\r\n  #y\r\n  #tile\r\n  #mergeTile\r\n\r\n  constructor(cellElement, x, y) {\r\n    this.#cellElement = cellElement;\r\n    this.#x = x;\r\n    this.#y = y;\r\n  }\r\n\r\n  get x() {\r\n    return this.#x;\r\n  }\r\n\r\n  get y() {\r\n    return this.#y;\r\n  }\r\n\r\n  get tile(){\r\n    return this.#tile;\r\n  }\r\n\r\n  get mergeTile() {\r\n    return this.#mergeTile;\r\n  }\r\n\r\n  set mergeTile(value) {\r\n    this.#mergeTile = value;\r\n    if (value == null) return;\r\n    this.#mergeTile.x = this.#x;\r\n    this.#mergeTile.y = this.#y;\r\n  }\r\n\r\n  set tile (value){\r\n    this.#tile = value;\r\n    if (value == null) return;\r\n    this.#tile.x = this.#x;\r\n    this.#tile.y = this.#y;\r\n  }\r\n\r\n  canAccept(tile) {\r\n    return (this.tile == null ||\r\n      (this.mergeTile == null && this.tile.value === tile.value));\r\n  }\r\n\r\n  mergeTiles() {\r\n    if(this.mergeTile == null || this.tile == null) return;\r\n    this.tile.value = this.tile.value + this.mergeTile.value;\r\n    if (typeof this.tile.value == \"number\"){\r\n      updateScore(this.tile.value);\r\n    }\r\n\r\n    if (this.tile.value == 1024 * baseNumber){\r\n      endGame(true);\r\n    }\r\n\r\n    this.mergeTile.remove();\r\n    this.mergeTile = null;\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nconst updateScore = (value) => {\r\n  SCORE = SCORE + value;\r\n  scoreElement.innerHTML = `Score:  ${SCORE}`;\r\n}\r\n","import Cell from \"./Cell.js\";\r\nimport {gridSize, cellSize} from \"./main2.js\";\r\n\r\n\r\nconst cellGap = 2;\r\n\r\n\r\n\r\nexport default class Grid {\r\n  #cells\r\n\r\n\r\n  constructor(gridElement, gridSize) {\r\n\r\n    gridElement.style.setProperty(\"--grid-size\", gridSize);\r\n    gridElement.style.setProperty(\"--cell-size\", `${cellSize}vmin`);\r\n    gridElement.style.setProperty(\"--cell-gap\", `${cellGap}vmin`);\r\n\r\n\r\n    /* Creates the array of cell divs and maps into array of Cell objects */\r\n    this.#cells = createCellElement(gridElement, gridSize)\r\n      .map((el, index) => {\r\n        return new Cell(\r\n          el,\r\n          index % gridSize,\r\n          Math.floor(index / gridSize));\r\n      })\r\n\r\n  }\r\n\r\n  get cellsByColumn() {\r\n    return this.#cells.reduce((cellGrid, cell) => {\r\n      cellGrid[cell.x] = cellGrid[cell.x] || []\r\n      cellGrid[cell.x][cell.y] = cell;\r\n      return cellGrid;\r\n    }, [])\r\n  }\r\n\r\n  get cellsByRow() {\r\n    return this.#cells.reduce((cellGrid, cell) => {\r\n      cellGrid[cell.y] = cellGrid[cell.y] || []\r\n      cellGrid[cell.y][cell.x] = cell;\r\n      return cellGrid;\r\n    }, [])\r\n  }\r\n\r\n  get cells() {\r\n    return this.#cells;\r\n  }\r\n\r\n  get #emptyCells() {\r\n    return this.#cells.filter(cell => cell.tile == null);\r\n  }\r\n\r\n\r\n  randomEmptyCell() {\r\n    const randomIndex = Math.floor(Math.random() * this.#emptyCells.length);\r\n    return this.#emptyCells[randomIndex];\r\n  }\r\n}\r\n\r\n\r\nconst createCellElement = (gridElement, gridSize) => {\r\n  const cells = [];\r\n\r\n  for (let i = 0; i < gridSize * gridSize; i++) {\r\n\r\n    const cell = document.createElement(\"div\");\r\n    cell.classList.add(\"cell\");\r\n    cell.setAttribute(\"id\", \"cell\");\r\n    cells.push(cell);\r\n    gridElement.append(cell);\r\n\r\n  }\r\n  return cells;\r\n}\r\n","const tileColors = ['#a7d0cd', '#b8c0b8', '#bfb2a7', '#c1a49a', '#bf988f', '#b98c86', '#b18180', '#a7787c', '#9a6f7a', '#8c6779', '#7b6079']\r\nimport {tile, gridSize, baseNumber} from \"./main2.js\";\r\n\r\nexport default class Tile {\r\n  #tileElement\r\n  #x\r\n  #y\r\n  #value\r\n\r\n  constructor (tileContainer, value = Math.random() > 0.5 ? baseNumber : baseNumber * 2){\r\n    this.#tileElement = document.createElement(\"div\");\r\n    this.#tileElement.classList.add(\"tile\");\r\n    this.#tileElement.setAttribute(\"id\", \"tile\");\r\n    tileContainer.append(this.#tileElement);\r\n    this.value = value;\r\n  }\r\n\r\n\r\n  set x (position){\r\n    this.#x = position\r\n    this.#tileElement.style.setProperty(\"--x\", position);\r\n  }\r\n\r\n\r\n  set y (position){\r\n    this.#y = position\r\n    this.#tileElement.style.setProperty(\"--y\", position);\r\n  }\r\n\r\n  get value (){\r\n    return this.#value;\r\n  }\r\n\r\n\r\n  set value (v) {\r\n    this.#value = v;\r\n    this.#tileElement.textContent = v;\r\n    const power = Math.log2(v);\r\n    const index = Math.floor(power);\r\n    this.#tileElement.style.setProperty(\r\n      \"background-color\",\r\n      tileColors[index-1]\r\n    );\r\n    if (index >= 8){\r\n      this.#tileElement.style.setProperty(\r\n       \"color\",\r\n        \"#F5F5F5\"\r\n      );\r\n    }\r\n    if (gridSize == 3){\r\n      this.#tileElement.style.setProperty(\"border-radius\", \"8vmin\");\r\n      this.#tileElement.style.setProperty(\"font-size\", \"6vmin\");\r\n    } else if (gridSize == 4){\r\n      this.#tileElement.style.setProperty(\"border-radius\", \"6vmin\");\r\n      this.#tileElement.style.setProperty(\"font-size\", \"5vmin\");\r\n    } else if (gridSize == 5){\r\n      this.#tileElement.style.setProperty(\"border-radius\", \"5vmin\");\r\n      this.#tileElement.style.setProperty(\"font-size\", \"4vmin\");\r\n    }\r\n\r\n  }\r\n\r\n  remove() {\r\n    this.#tileElement.remove();\r\n  }\r\n\r\n  waitForTransition(animation = false) {\r\n    return new Promise(resolve => {\r\n      this.#tileElement.addEventListener(\r\n        animation ? \"animationend\" : \"transitionend\",\r\n        resolve, {\r\n        once: true,\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n","import {grid, gameBoard, setupInput, touches, endGameBoard, hiddenClass} from \"./main2.js\";\r\nimport Grid from \"./Grid.js\";\r\nimport Tile from \"./Tile.js\";\r\nimport {endGame, endGameScoreUpdate} from \"./EndgameHandler.js\";\r\nimport {SCORE} from \"./Cell.js\";\r\n\r\n\r\n\r\nexport const determineTouchDirection = () => {\r\n\r\n  /* Distance in X direction */\r\n  const distanceX = touches[0][1] - touches [0][0];\r\n\r\n  /* Distance in Y direction */\r\n  const distanceY = touches[1][1] - touches [1][0];\r\n\r\n\r\n  /* if Y distance is bigger than X distance, then vertical direction */\r\n  if (Math.abs(distanceX) > Math.abs(distanceY)){\r\n\r\n    if (distanceX > 0) return \"ArrowRight\";\r\n    else return \"ArrowLeft\";\r\n\r\n  } else {\r\n\r\n    if (distanceY > 0) return \"ArrowDown\";\r\n    else return \"ArrowUp\";\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const handlerInput = async e => {\r\n\r\n  let direction;\r\n\r\n  if (typeof e == \"object\"){\r\n    direction = e.key;\r\n  } else if (typeof e == \"string\"){\r\n    direction = e;\r\n  }\r\n\r\n  switch (direction){\r\n    case \"ArrowUp\":\r\n    if (!canMoveUp()){\r\n      setupInput();\r\n      return;\r\n    }\r\n      await moveUp();\r\n      break;\r\n\r\n\r\n    case \"ArrowDown\":\r\n    if (!canMoveDown()){\r\n      setupInput();\r\n      return;\r\n    }\r\n      await moveDown();\r\n      break;\r\n\r\n\r\n    case \"ArrowLeft\":\r\n    if (!canMoveLeft()){\r\n      setupInput();\r\n      return;\r\n    }\r\n      await moveLeft();\r\n      break;\r\n\r\n\r\n    case \"ArrowRight\":\r\n    if (!canMoveRight()){\r\n      setupInput();\r\n      return;\r\n    }\r\n      await moveRight();\r\n      break;\r\n\r\n\r\n    default:\r\n      setupInput();\r\n      return;\r\n  }\r\n\r\n\r\n  grid.cells.forEach(cell => cell.mergeTiles());\r\n\r\n  if (!(endGameBoard.classList.contains(hiddenClass))){\r\n    endGameScoreUpdate();\r\n    return;\r\n  }\r\n\r\n  const newTile = new Tile(gameBoard);\r\n  grid.randomEmptyCell().tile = newTile;\r\n\r\n  touches[0].length = 0;\r\n  touches[1].length = 1;\r\n\r\n\r\n  if(!canMoveUp() && !canMoveDown() && !canMoveLeft() && !canMoveRight()){\r\n    newTile.waitForTransition(true).then(() => {\r\n      endGame(false);\r\n    })\r\n  } else {\r\n    setupInput();\r\n  }\r\n}\r\n\r\nconst moveUp = () => {\r\n  slideTiles(grid.cellsByColumn);\r\n}\r\n\r\nconst moveLeft = () => {\r\n  slideTiles(grid.cellsByRow);\r\n}\r\n\r\nconst moveDown = () => {\r\n  slideTiles(grid.cellsByColumn.map(column => [...column].reverse()));\r\n}\r\n\r\nconst moveRight = () => {\r\n  slideTiles(grid.cellsByRow.map(row => [...row].reverse()));\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst slideTiles = (cells) => {\r\n  return Promise.all(\r\n\r\n  cells.flatMap(group => {\r\n    const promises = [];\r\n    for (let i = 1; i < group.length; i++) {\r\n      const cell = group[i];\r\n      if (cell.tile == null) continue;\r\n      let lastValidCell;\r\n      for (let j = i - 1; j >= 0; j--){\r\n        const moveToCell = group[j];\r\n        if (!moveToCell.canAccept(cell.tile)) break;\r\n        lastValidCell = moveToCell;\r\n      }\r\n\r\n      if (lastValidCell != null){\r\n        promises.push(cell.tile.waitForTransition());\r\n        if (lastValidCell.tile != null){\r\n          lastValidCell.mergeTile = cell.tile;\r\n        } else {\r\n          lastValidCell.tile = cell.tile;\r\n        }\r\n        cell.tile = null;\r\n      }\r\n    }\r\n    return promises;\r\n  }))\r\n}\r\n\r\n\r\nconst canMoveUp = () => {\r\n  return canMove(grid.cellsByColumn);\r\n}\r\n\r\nconst canMoveDown = () => {\r\n  return canMove(grid.cellsByColumn.map(column => [...column].reverse()));\r\n}\r\n\r\nconst canMoveLeft = () => {\r\n  return canMove(grid.cellsByRow);\r\n}\r\n\r\nconst canMoveRight = () => {\r\n  return canMove(grid.cellsByRow.map(row => [...row].reverse()));\r\n}\r\n\r\nconst canMove = cells => {\r\n  return cells.some(group => {\r\n    return group.some((cell, index) => {\r\n      if(index == 0) return false;\r\n      if (cell.tile == null) return false;\r\n      const moveToCell = group[index - 1];\r\n      return moveToCell.canAccept(cell.tile);\r\n    })\r\n  })\r\n}\r\n","const rangeInput = document.getElementById('rangeInput');\r\nconst bubble = document.getElementById('rangeBubble');\r\n\r\n\r\nexport const setRangeBubble = () => {\r\n\r\n  bubble.innerHTML = rangeInput.value;\r\n  const calcPositionX = (rangeInput.offsetWidth / 10) * rangeInput.value - (rangeInput.offsetWidth / 10) + 4;\r\n  bubble.style.left = `${calcPositionX}px`;\r\n}\r\n","import Grid from \"./Grid.js\";\r\nimport Cell from \"./Cell.js\";\r\nimport Tile from \"./Tile.js\";\r\nimport {determineTouchDirection,\r\n        handlerInput} from \"./InputHandler.js\";\r\nimport {setRangeBubble} from \"./Settings.js\";\r\n\r\n\r\n\r\nconst main = document.getElementById(\"main\");\r\nexport const title = document.getElementById(\"title\");\r\nexport const gameBoard = document.getElementById(\"game-board\");\r\nconst radioGridButtons = Array.from(document.querySelectorAll('input[name=\"gridSize\"]'));\r\nconst baseNumberInput = Array.from(document.querySelectorAll('input[name=\"baseNumber\"]'));\r\nconst rangeInput = document.getElementById('rangeInput');\r\nconst bubble = document.getElementById('rangeBubble');\r\nconst openSettingsButton = document.getElementById('openSettings');\r\nconst closeSettingsButton = document.getElementById('closeSettings');\r\nconst tapToStart = document.getElementById('tapToStart');\r\nconst settingsBoard = document.getElementById('settings-board');\r\nconst starterBoard = document.getElementById('starter-board');\r\nconst score = document.getElementById(\"score\");\r\nexport const tile = document.getElementById(\"tile\");\r\nexport const endGameBoard = document.getElementById(\"endgame__board\");\r\nexport const endGameTitle = document.getElementById(\"endgame__title\");\r\nexport const endgameScore = document.getElementById(\"endgame__score\");\r\nexport const hiddenClass = \"hidden\";\r\n\r\nexport let grid = '';\r\n\r\nexport let gridSize = 4;\r\nexport let cellSize = 15;\r\nexport let baseNumber = 2;\r\n\r\n\r\n\r\n\r\n/* Open settings board */\r\nopenSettingsButton.addEventListener(\"click\", function () {\r\n  settingsBoard.classList.toggle(hiddenClass);\r\n  tapToStart.classList.toggle(hiddenClass);\r\n  openSettingsButton.classList.toggle(hiddenClass);\r\n  setRangeBubble();\r\n});\r\n\r\n/* Close settings board */\r\ncloseSettingsButton.addEventListener(\"click\", function () {\r\n  settingsBoard.classList.toggle(hiddenClass);\r\n  tapToStart.classList.toggle(hiddenClass);\r\n  openSettingsButton.classList.toggle(hiddenClass);\r\n})\r\n\r\n/* Start the game when clicking */\r\ntapToStart.addEventListener(\"click\", function () {\r\n  openSettingsButton.classList.toggle(hiddenClass);\r\n  starterBoard.classList.toggle(hiddenClass);\r\n  tapToStart.classList.toggle(hiddenClass);\r\n  main.classList.toggle(hiddenClass);\r\n  score.classList.toggle(hiddenClass);\r\n  grid = new Grid(gameBoard, gridSize);\r\n  grid.randomEmptyCell().tile = new Tile(gameBoard);\r\n  grid.randomEmptyCell().tile = new Tile(gameBoard);\r\n  setupInput();\r\n})\r\n\r\n\r\n/* Starts the game when pressing Space button */\r\nwindow.addEventListener(\"keyup\", e => {\r\n  if (e.code == \"Space\" || e.code == \"Enter\"){\r\n    openSettingsButton.classList.toggle(hiddenClass);\r\n    tapToStart.classList.toggle(hiddenClass);\r\n    main.classList.toggle(hiddenClass);\r\n    score.classList.toggle(hiddenClass);\r\n    grid = new Grid(gameBoard);\r\n    grid.randomEmptyCell().tile = new Tile(gameBoard);\r\n    grid.randomEmptyCell().tile = new Tile(gameBoard);\r\n    setupInput();\r\n  }\r\n});\r\n\r\n\r\n/* Update value and move slider thumb */\r\nrangeInput.addEventListener(\"input\", ()=>{\r\n    bubble.innerHTML = rangeInput.value;\r\n    const calcPositionX1 = rangeInput.offsetWidth / 10 * rangeInput.value - rangeInput.offsetWidth / 10 + 4;\r\n    bubble.style.left = `${calcPositionX1}px`;\r\n    baseNumber = parseInt(rangeInput.value);\r\n    title.innerHTML = 1024*baseNumber;\r\n});\r\n\r\n\r\n/* Handle grid size input */\r\nfor (let radio of radioGridButtons){\r\n  radio.addEventListener(\"click\", e => {\r\n    gridSize = radio.value;\r\n    if (radio.value == 3){\r\n      gridSize = 3;\r\n      cellSize = 18;\r\n    } else if (radio.value == 4){\r\n      gridSize = 4;\r\n      cellSize = 15;\r\n    } else if (radio.value == 5){\r\n      gridSize = 5;\r\n      cellSize = 11;\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* Listen for keydown events and then invoke handlerInput function */\r\nexport const setupInput = () => {\r\n  window.addEventListener(\"keydown\", handlerInput, {once: true});\r\n}\r\n\r\n/* Define array that tracks XY coordinates of touchstart and touchend events */\r\nexport var touches = [[], []];\r\n\r\n/* Push XY coordinates of touchstart event */\r\nwindow.addEventListener(\"touchstart\", function (ev) {\r\n  touches[0].push(ev.changedTouches[0].screenX);\r\n  touches[1].push(ev.changedTouches[0].screenY);\r\n})\r\n\r\n/* Push XY coordinates of touchend event, determine direction and invoke handlerInput function */\r\nwindow.addEventListener(\"touchend\", function (ev) {\r\n  touches[0].push(ev.changedTouches[0].screenX);\r\n  touches[1].push(ev.changedTouches[0].screenY);\r\n  const direction = determineTouchDirection(touches);\r\n  handlerInput(direction);\r\n})\r\n"],"names":["$0e2414bb5f847d16$export$5599a367734a1c3","outcome","$f71e64e1e05096f8$export$1c4abf71ebb8148e","innerHTML","$f71e64e1e05096f8$export$25ac647f1e4b0707","classList","remove","$f71e64e1e05096f8$export$4d30c755dbc1e70c","$f71e64e1e05096f8$export$fbf952a8bedc93ed","$9370f090a1e03025$export$7509766df8e18689","$9370f090a1e03025$var$scoreElement","document","getElementById","cellElement","x","y","tile","mergeTile","this","value","canAccept","mergeTiles","$9370f090a1e03025$var$updateScore","$f71e64e1e05096f8$export$5beb312b11e19bba","cells","gridElement","gridSize","style","setProperty","$f71e64e1e05096f8$export$773ede0104c69021","$a781f2de18c05b26$var$createCellElement","map","el","index","$9370f090a1e03025$export$2e2bcd8739ae039","Math","floor","cellsByColumn","reduce","cellGrid","cell","cellsByRow","emptyCells","filter","randomEmptyCell","randomIndex","random","length","i","createElement","add","setAttribute","push","append","$51c6b31e76ea7e02$var$tileColors","tileElement","tileContainer","position","v","textContent","power","log2","$f71e64e1e05096f8$export$6d8204c2cb2e06b8","waitForTransition","animation","Promise","resolve","addEventListener","once","$95e1ba3328502cfe$export$b0beff8044cf7e8f","async","e","direction","key","$95e1ba3328502cfe$var$canMoveUp","$f71e64e1e05096f8$export$d95a543601b1","$95e1ba3328502cfe$var$moveUp","$95e1ba3328502cfe$var$canMoveDown","$95e1ba3328502cfe$var$moveDown","$95e1ba3328502cfe$var$canMoveLeft","$95e1ba3328502cfe$var$moveLeft","$95e1ba3328502cfe$var$canMoveRight","$95e1ba3328502cfe$var$moveRight","$f71e64e1e05096f8$export$85fc379452d91af0","forEach","contains","newTile","$51c6b31e76ea7e02$export$2e2bcd8739ae039","$f71e64e1e05096f8$export$7c513ec27fcf70de","$f71e64e1e05096f8$export$a1912f4eb118cd0e","then","$95e1ba3328502cfe$var$slideTiles","column","reverse","row","all","flatMap","group","promises","lastValidCell","j","moveToCell","$95e1ba3328502cfe$var$canMove","some","$3898b1e9cb54d7f4$var$rangeInput","$3898b1e9cb54d7f4$var$bubble","$f71e64e1e05096f8$var$main","$f71e64e1e05096f8$export$fb184b623420d9be","$f71e64e1e05096f8$var$radioGridButtons","Array","from","querySelectorAll","$f71e64e1e05096f8$var$rangeInput","$f71e64e1e05096f8$var$bubble","$f71e64e1e05096f8$var$openSettingsButton","$f71e64e1e05096f8$var$closeSettingsButton","$f71e64e1e05096f8$var$tapToStart","$f71e64e1e05096f8$var$settingsBoard","$f71e64e1e05096f8$var$starterBoard","$f71e64e1e05096f8$var$score","toggle","calcPositionX","offsetWidth","left","$3898b1e9cb54d7f4$export$72b18747f662c338","$a781f2de18c05b26$export$2e2bcd8739ae039","window","code","calcPositionX1","parseInt","radio","ev","changedTouches","screenX","screenY","distanceX","distanceY","abs","$95e1ba3328502cfe$export$9f73362797656d58"],"version":3,"file":"index.03b1d8de.js.map"}